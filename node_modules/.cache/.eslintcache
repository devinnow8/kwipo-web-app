[{"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/index.js":"1","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/App.js":"2","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/reportWebVitals.js":"3","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/Login/index.js":"4","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/SignUp/index.js":"5","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/Main/index.js":"6","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/API/function.js":"7","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/API/BaseAPI.js":"8","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/Loader.js":"9"},{"size":497,"mtime":1689399270598,"results":"10","hashOfConfig":"11"},{"size":412,"mtime":1689431187631,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1689399270598,"results":"13","hashOfConfig":"11"},{"size":2859,"mtime":1689431782373,"results":"14","hashOfConfig":"11"},{"size":2524,"mtime":1689399270596,"results":"15","hashOfConfig":"11"},{"size":3718,"mtime":1689431953408,"results":"16","hashOfConfig":"11"},{"size":1344,"mtime":1689399903411,"results":"17","hashOfConfig":"11"},{"size":422,"mtime":1689399270594,"results":"18","hashOfConfig":"11"},{"size":319,"mtime":1689431623842,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1rfimxn",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/index.js",[],[],[],"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/App.js",[],[],"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/reportWebVitals.js",[],[],"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/Login/index.js",[],[],"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/SignUp/index.js",[],[],"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/Main/index.js",["49"],[],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { Form, Input, Button, Image, Row, Col } from \"antd\";\nimport { sendMessageNotification, getUsers } from \"../../API/function\";\nimport Multiselect from \"multiselect-react-dropdown\";\nimport kwipologo from \"../../Images/kwipologo.png\";\nimport Message from \"./download.jpeg\";\nimport \"./index.css\";\nimport messageImg from \"../../Images/message-img.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loader from \"../Loader\";\nconst { TextArea } = Input;\n\nconst Main = () => {\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const res = await getUsers();\n      if (res.data) {\n        setUsers(res.data);\n      }\n    } catch (err) {\n      console.log(\"err\", err);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const handleSend = async () => {\n    setIsLoading(true);\n    try {\n      const values = await form.validateFields();\n      await sendMessageNotification(values.message, selectedUsers);\n    } catch (error) {\n      console.log(\"Validation error\", error);\n    }\n    setIsLoading(false);\n  };\n\n  const handleLogout = () => {\n    navigate(\"/\");\n  };\n  return (\n    <Row justify=\"space-between\" align=\"middle\" className=\"login-form\">\n      {isLoading && <Loader />}\n      <Col span={12} className=\"login-img\">\n        <Image src={messageImg} alt=\"Sign Up\" width={450} />\n      </Col>\n      <Col span={12}>\n        <div className=\"login-form-content\" style={{ width: \"unset\" }}>\n          <div justify=\"center\" align=\"middle\">\n            <Image src={kwipologo} alt=\"logo\" width={150} className=\"logo\" />\n          </div>\n          <Form form={form} onFinish={handleSend}>\n            <Form.Item name=\"selectedUsers\">\n              <Multiselect\n                options={users.map((option) => ({\n                  label: option.name,\n                  value: option.user_id,\n                }))}\n                selectedValues={selectedUsers.map((userId) => {\n                  const user = users.find((user) => user.user_id === userId);\n                  return {\n                    label: user ? user.name : \"\",\n                    value: userId,\n                  };\n                })}\n                onSelect={(selectedList) => {\n                  const updatedSelectedUsers = selectedList.map(\n                    (selectedOption) => selectedOption.value\n                  );\n                  setSelectedUsers(updatedSelectedUsers);\n                }}\n                displayValue=\"label\"\n              />\n            </Form.Item>\n            <Form.Item name=\"message\">\n              <TextArea\n                showCount\n                maxLength={100}\n                style={{ width: \"100%\", height: 120, resize: \"none\" }}\n              />\n            </Form.Item>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n              >\n                Send Message\n              </Button>\n            </Form.Item>\n            <Form.Item style={{ marginBottom: \"0px\" }}>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                onClick={handleLogout}\n              >\n                logout\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Main;\n","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/API/function.js",[],[],"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/API/BaseAPI.js",[],[],"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/Loader.js",[],[],{"ruleId":"50","severity":1,"message":"51","line":6,"column":8,"nodeType":"52","messageId":"53","endLine":6,"endColumn":15},"no-unused-vars","'Message' is defined but never used.","Identifier","unusedVar"]