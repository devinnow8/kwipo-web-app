[{"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/index.js":"1","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/App.js":"2","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/reportWebVitals.js":"3","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/Home/home.js":"4","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/Login/index.js":"5","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/SignUp/index.js":"6","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/Main/index.js":"7","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/API/function.js":"8","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/API/BaseAPI.js":"9"},{"size":497,"mtime":1689399270598,"results":"10","hashOfConfig":"11"},{"size":163,"mtime":1689399270595,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1689399270598,"results":"13","hashOfConfig":"11"},{"size":482,"mtime":1689399270595,"results":"14","hashOfConfig":"11"},{"size":2562,"mtime":1689399270595,"results":"15","hashOfConfig":"11"},{"size":2524,"mtime":1689399270596,"results":"16","hashOfConfig":"11"},{"size":2382,"mtime":1689399814915,"results":"17","hashOfConfig":"11"},{"size":1344,"mtime":1689399903411,"results":"18","hashOfConfig":"11"},{"size":422,"mtime":1689399270594,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rfimxn",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/index.js",[],[],"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/App.js",[],[],"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/reportWebVitals.js",[],[],"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/Home/home.js",[],[],"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/Login/index.js",["49","50"],[],"import React, { useState } from \"react\";\nimport \"./index.css\";\nimport { Form, Input, Button, Checkbox, Image } from \"antd\";\nimport { UserOutlined, MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { loginUsersDetails } from \"../../API/function\";\nimport signInImage from \"./sign-signin-ca50f83d2f.png\";\n\nconst Login = () => {\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const [newUser, setNewUser] = useState({ email: \"\", password: \"\" });\n\n  const handleSubmit = () => {\n    navigate(\"/main\");\n\n    loginUsersDetails(newUser);\n  };\n  console.log(\"newUser\", newUser);\n\n  const handleUserData = (e) => {\n    const { name, value } = e.target;\n    setNewUser((prevUser) => ({\n      ...prevUser,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div className=\"form\">\n      <div className=\"login-image\">\n        <Image src={signInImage} alt=\"Sign In\" />\n      </div>\n\n      <div className=\"login-container\">\n        <Form form={form} onFinish={handleSubmit} className=\"login-form\">\n          <Form.Item\n            name=\"email\"\n            rules={[{ required: true, message: \"Please input your email!\" }]}\n          >\n            <Input\n              prefix={<MailOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Email\"\n              name=\"email\"\n              value={newUser.email}\n              onChange={handleUserData}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your password!\" }]}\n          >\n            <Input.Password\n              prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Password\"\n              name=\"password\"\n              value={newUser.password}\n              onChange={handleUserData}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n            <a className=\"login-form-forgot\" href=\"\">\n              Forgot password\n            </a>\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              Sign-in\n            </Button>\n            Or <a href=\"http://localhost:3000/signUp\">register now!</a>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/SignUp/index.js",[],[],"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/Components/Main/index.js",["51"],[],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { Form, Input, Button, Image } from \"antd\";\nimport { sendMessageNotification, getUsers } from \"../../API/function\";\nimport Multiselect from \"multiselect-react-dropdown\";\nimport Message from \"./download.jpeg\";\nimport \"./index.css\";\nconst { TextArea } = Input;\n\nconst Main = () => {\n  const [form] = Form.useForm();\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  const fetchData = useCallback(async () => {\n    try {\n      const res = await getUsers();\n      if (res.data) {\n        setUsers(res.data);\n      }\n    } catch (err) {\n      console.log(\"err\", err);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleSend = async () => {\n    try {\n      const values = await form.validateFields();\n      await sendMessageNotification(values.message, selectedUsers);\n    } catch (error) {\n      console.log(\"Validation error\", error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"signup-image\">\n        <Image src={Message} alt=\"Sign Up\" />\n      </div>\n      <Form form={form} onFinish={handleSend}>\n        <Form.Item name=\"message\">\n          <TextArea\n            showCount\n            maxLength={100}\n            style={{ width: 500, height: 120, resize: \"none\" }}\n          />\n        </Form.Item>\n\n        <Form.Item name=\"selectedUsers\">\n          <Multiselect\n            options={users.map((option) => ({\n              label: option.name,\n              value: option.user_id,\n            }))}\n            selectedValues={selectedUsers.map((userId) => {\n              const user = users.find((user) => user.user_id === userId);\n              return {\n                label: user ? user.name : \"\",\n                value: userId,\n              };\n            })}\n            onSelect={(selectedList) => {\n              const updatedSelectedUsers = selectedList.map(\n                (selectedOption) => selectedOption.value\n              );\n              setSelectedUsers(updatedSelectedUsers);\n            }}\n            displayValue=\"label\"\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"send-button\">\n            Send Message\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Main;\n","/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/API/function.js",[],[],"/Users/aakankshagrover/Documents/GitHub/kwipo-web-app/src/API/BaseAPI.js",[],[],{"ruleId":"52","severity":1,"message":"53","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":22},{"ruleId":"56","severity":1,"message":"57","line":65,"column":13,"nodeType":"58","endLine":65,"endColumn":54},{"ruleId":"59","severity":1,"message":"60","line":27,"column":6,"nodeType":"61","endLine":27,"endColumn":8,"suggestions":"62"},"no-unused-vars","'UserOutlined' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["63"],{"desc":"64","fix":"65"},"Update the dependencies array to be: [fetchData]",{"range":"66","text":"67"},[747,749],"[fetchData]"]