{"ast":null,"code":"var _jsxFileName = \"/Users/ennow8/Documents/GitHub/kwipo-web-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { sendMessageNotification, getUsers } from \"./API/function\";\nimport * as PusherPushNotifications from \"@pusher/push-notifications-web\";\nimport { Input } from \"antd\";\nimport Multiselect from 'multiselect-react-dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst beamsClient = new PusherPushNotifications.Client({\n  instanceId: \"e9131849-c6fa-4fba-830d-c3e2fda3598d\"\n});\nbeamsClient.start().then(() => beamsClient.addDeviceInterest(\"hello\")).then(() => console.log(\"Successfully registered and subscribed!\")).catch(console.error);\nconst App = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const fetchData = useCallback(async () => {\n    try {\n      const res = await getUsers();\n      if (res.data) {\n        setUsers(res.data);\n      }\n    } catch (err) {\n      console.log(\"err\", err);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const handleMessageChange = ({\n    target: {\n      value\n    }\n  }) => {\n    setMessage(value);\n  };\n  const handleSend = async () => {\n    console.log(\"yuui\", selectedUsers);\n    await sendMessageNotification(message);\n  };\n  const handleChange = ({\n    target: {\n      value,\n      options\n    }\n  }) => {\n    const selectedUserName = options[options.selectedIndex].getAttribute(\"name\");\n    const userArray = [...selectedUsers];\n    if (selectedUserName) {\n      const userIndex = users.findIndex(user => user.name === selectedUserName);\n      if (userIndex !== -1) {\n        userArray[userIndex] = value;\n        setSelectedUsers(userArray);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textarea\",\n      children: /*#__PURE__*/_jsxDEV(TextArea, {\n        showCount: true,\n        maxLength: 100,\n        value: message,\n        onChange: () => handleMessageChange(),\n        style: {\n          width: 500,\n          height: 120,\n          resize: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"myDropdown\",\n        children: \"Select an option:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n        options: users.map(option => ({\n          label: option.name,\n          value: option.user_id\n        })),\n        selectedValues: selectedUsers.map(userId => ({\n          label: users.find(user => user.user_id === userId).name,\n          value: userId\n        })),\n        onSelect: selectedList => {\n          const updatedSelectedUsers = selectedList.map(selectedOption => selectedOption.value);\n          setSelectedUsers(updatedSelectedUsers);\n        },\n        displayValue: \"label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        className: \"send-button\",\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"F9juMDRjaqLJB60YdAwUofcUedE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","sendMessageNotification","getUsers","PusherPushNotifications","Input","Multiselect","jsxDEV","_jsxDEV","TextArea","beamsClient","Client","instanceId","start","then","addDeviceInterest","console","log","catch","error","App","_s","message","setMessage","users","setUsers","selectedUsers","setSelectedUsers","fetchData","res","data","err","handleMessageChange","target","value","handleSend","handleChange","options","selectedUserName","selectedIndex","getAttribute","userArray","userIndex","findIndex","user","name","className","children","showCount","maxLength","onChange","style","width","height","resize","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","map","option","label","user_id","selectedValues","userId","find","onSelect","selectedList","updatedSelectedUsers","selectedOption","displayValue","onClick","_c","$RefreshReg$"],"sources":["/Users/ennow8/Documents/GitHub/kwipo-web-app/src/App.js"],"sourcesContent":["import React, { useState,useEffect,useCallback } from \"react\";\nimport { sendMessageNotification,getUsers } from \"./API/function\"\nimport * as PusherPushNotifications from \"@pusher/push-notifications-web\";\nimport { Input } from \"antd\";\nimport Multiselect from 'multiselect-react-dropdown'\nconst { TextArea } = Input;\n\n\nconst beamsClient = new PusherPushNotifications.Client({\n  instanceId: \"e9131849-c6fa-4fba-830d-c3e2fda3598d\",\n});\n\nbeamsClient\n  .start()\n  .then(() => beamsClient.addDeviceInterest(\"hello\"))\n  .then(() => console.log(\"Successfully registered and subscribed!\"))\n  .catch(console.error);\n\nconst App = () => {\n  const [message, setMessage] = useState(\"\");\n  const [users,setUsers] = useState([]);\n  const [selectedUsers,setSelectedUsers] = useState([])\n\n\n  const fetchData = useCallback(async () => {\n \n    try {\n      const res = await getUsers();\n      if (res.data) {\n        setUsers(res.data);\n      }\n    } catch (err) {\n    console.log(\"err\", err);\n    \n    }\n  }, []);\n\n \n  useEffect (() =>{\n    fetchData()\n   \n\n  }, []);\n\n\n\n  const handleMessageChange = ({ target: { value } }) => {\n    setMessage(value);\n  };\n\n  const handleSend = async () => {\n    console.log(\"yuui\", selectedUsers)\n    await sendMessageNotification(message, );\n  };\n\n\n  const handleChange = ({ target: { value, options } }) => {\n    const selectedUserName = options[options.selectedIndex].getAttribute(\"name\");\n    const userArray = [...selectedUsers];\n  \n    if (selectedUserName) {\n      const userIndex = users.findIndex((user) => user.name === selectedUserName);\n      if (userIndex !== -1) {\n        userArray[userIndex] = value;\n        setSelectedUsers(userArray);\n      }\n    }\n  };\n  \n  return (\n\n    <div className=\"container\">\n      <div className=\"textarea\">\n        \n        <TextArea\n          showCount\n          maxLength={100}\n          value={message}\n          onChange={()=>handleMessageChange()}\n          style={{\n            width: 500,\n            height: 120,\n            resize: \"none\",\n            \n          }}\n        />\n      </div>\n<div>\n  <br/>\n  \n<label htmlFor=\"myDropdown\">Select an option:</label>\n\n\n\n<Multiselect\n  options={users.map((option) => ({ label: option.name, value: option.user_id }))}\n  selectedValues={selectedUsers.map((userId) => ({ label: users.find((user) => user.user_id === userId).name, value: userId }))}\n  onSelect={(selectedList) => {\n    const updatedSelectedUsers = selectedList.map((selectedOption) => selectedOption.value);\n    setSelectedUsers(updatedSelectedUsers);\n  }}\n  displayValue=\"label\"\n/>\n\n\n</div>\n<br/> \n\n\n      <div className=\"send-container\">\n     \n\n        <button onClick={handleSend} className=\"send-button\">\n          Send Message\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}